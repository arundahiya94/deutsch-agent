[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "deutsch-agent-api"
version = "0.1.0"
description = "FastAPI-based Deutsch Agent API"
requires-python = ">=3.10"
dependencies = [
  # Core framework
  "fastapi",
  "starlette",
  "uvicorn[standard]",

  # Data validation & typing
  "pydantic",
  "pydantic_core",
  "annotated-types",
  "typing-inspection",
  "typing_extensions",

  # Environment & configuration
  "python-dotenv",

  # Logging
  "loguru",
  "structlog",
  "colorama",

  # Utilities
  "anyio",
  "idna",
  "zipp",
  "setuptools",
  "platformdirs",
  "tomlkit",

  # Code quality
  "pylint",
  "pylint-django",
  "pylint-import-requirements",
  "pylint-plugin-utils",
  "isort",
  "astroid",
  "mccabe",
  "dill",

  # Project libraries
  "annotated-doc",
  "rank-bm25",
  "reportlab",
  "langchain",
  "langgraph",
]

[project.optional-dependencies]
dev = [
  "pylint",
  "pylint-django",
  "pylint-import-requirements",
  "isort",
  "black",
]

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["db", "rag", "core", "graphs", "routers", "schemas", "workers"]
exclude = ["tests*", "scripts*", "examples*"]

[tool.black]
line-length = 100
target-version = ['py310']
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".venv", "venv", "__pycache__"]

[tool.pylint.main]
max-line-length = 100
load-plugins = [
  "pylint_django",
  "pylint_import_requirements",
]
ignore = [
  ".git",
  ".venv",
  "venv",
  "build",
  "dist",
  "__pycache__",
]

[tool.pylint.messages_control]
disable = [
  "C0114", # missing-module-docstring
  "C0115", # missing-class-docstring
  "C0116", # missing-function-docstring
  "R0903", # too-few-public-methods
  "R0801", # duplicate-code
  "W1203", # logging-fstring-interpolation
]

[tool.pylint.format]
expected-line-ending-format = "LF"

[tool.pylint.basic]
good-names = [
  "i",
  "j",
  "k",
  "id",
  "db",
  "ok",
]

[tool.pylint.design]
max-args = 10
max-attributes = 12

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.imports]
known-third-party = [
  "fastapi",
  "starlette",
  "pydantic",
  "anyio",
  "uvicorn",
  "loguru",
  "structlog",
]

[tool.pylint.variables]
ignored-argument-names = "^_.*"
